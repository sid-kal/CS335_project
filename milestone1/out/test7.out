digraph G {
ordering=out
node1 [label= "file_input"]
node225 [label= "classdef"]
node2 [label= "KEYWORD(class)", shape = rectangle, color = green]
node3 [label= "NAME(Solution)", shape = rectangle, color = red]
node4 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node224 [label= "stmts"]
node46 [label= "funcdef"]
node5 [label= "KEYWORD(def)", shape = rectangle, color = green]
node6 [label= "NAME(reduce)", shape = rectangle, color = red]
node19 [label= "parameters"]
node7 [label= "DELIMITER(()", shape = rectangle, color = blue]
node18 [label= "typedargslist"]
node10 [label= "formal_param"]
node8 [label= "NAME(self)", shape = rectangle, color = red]
node9 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node16 [label= "formal_param"]
node11 [label= "NAME(s1)", shape = rectangle, color = red]
node15 [label= "param_type_hint"]
node12 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node13 [label= "TYPE NAME(str)", shape = rectangle, color = cyan]
node14 [label= "DELIMITER())", shape = rectangle, color = blue]
node23 [label= "return_type_hint"]
node20 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node21 [label= "TYPE NAME(str)", shape = rectangle, color = cyan]
node22 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node43 [label= "stmts"]
node25 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node24 [label= "NAME(temp)", shape = rectangle, color = red]
node26 [label= "STRING_LITERAL(\"\")", shape = rectangle, color = orange]
node42 [label= "for_stmt"]
node27 [label= "KEYWORD(for)", shape = rectangle, color = green]
node28 [label= "NAME(i)", shape = rectangle, color = red]
node29 [label= "KEYWORD(in)", shape = rectangle, color = green]
node30 [label= "NAME(s1)", shape = rectangle, color = red]
node31 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node40 [label= "if_stmt"]
node32 [label= "KEYWORD(if)", shape = rectangle, color = green]
node34 [label= "OPERATOR(!=)", shape = rectangle, color = purple]
node33 [label= "NAME(i)", shape = rectangle, color = red]
node35 [label= "STRING_LITERAL(\'#\')", shape = rectangle, color = orange]
node36 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node38 [label= "OPERATOR(+=)", shape = rectangle, color = purple]
node37 [label= "NAME(temp)", shape = rectangle, color = red]
node39 [label= "NAME(i)", shape = rectangle, color = red]
node45 [label= "return_stmt"]
node41 [label= "KEYWORD(return)", shape = rectangle, color = green]
node44 [label= "NAME(temp)", shape = rectangle, color = red]
node223 [label= "funcdef"]
node47 [label= "KEYWORD(def)", shape = rectangle, color = green]
node48 [label= "NAME(moveRobots)", shape = rectangle, color = red]
node67 [label= "parameters"]
node49 [label= "DELIMITER(()", shape = rectangle, color = blue]
node66 [label= "typedargslist"]
node52 [label= "formal_param"]
node50 [label= "NAME(self)", shape = rectangle, color = red]
node51 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node58 [label= "formal_param"]
node53 [label= "NAME(s1)", shape = rectangle, color = red]
node57 [label= "param_type_hint"]
node54 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node55 [label= "TYPE NAME(str)", shape = rectangle, color = cyan]
node56 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node65 [label= "formal_param"]
node60 [label= "NAME(s2)", shape = rectangle, color = red]
node64 [label= "param_type_hint"]
node61 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node62 [label= "TYPE NAME(str)", shape = rectangle, color = cyan]
node63 [label= "DELIMITER())", shape = rectangle, color = blue]
node71 [label= "return_type_hint"]
node68 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node69 [label= "TYPE NAME(str)", shape = rectangle, color = cyan]
node70 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node105 [label= "stmts"]
node97 [label= "if_stmt"]
node72 [label= "KEYWORD(if)", shape = rectangle, color = green]
node82 [label= "OPERATOR(!=)", shape = rectangle, color = purple]
node77 [label= "atom_expr"]
node73 [label= "NAME(self)", shape = rectangle, color = red]
node76 [label= "trailer"]
node74 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node75 [label= "NAME(reduce)", shape = rectangle, color = red]
node81 [label= "trailer"]
node78 [label= "DELIMITER(()", shape = rectangle, color = blue]
node79 [label= "NAME(s1)", shape = rectangle, color = red]
node80 [label= "DELIMITER())", shape = rectangle, color = blue]
node87 [label= "atom_expr"]
node83 [label= "NAME(self)", shape = rectangle, color = red]
node86 [label= "trailer"]
node84 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node85 [label= "NAME(reduce)", shape = rectangle, color = red]
node91 [label= "trailer"]
node88 [label= "DELIMITER(()", shape = rectangle, color = blue]
node89 [label= "NAME(s2)", shape = rectangle, color = red]
node90 [label= "DELIMITER())", shape = rectangle, color = blue]
node92 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node95 [label= "return_stmt"]
node93 [label= "KEYWORD(return)", shape = rectangle, color = green]
node94 [label= "STRING_LITERAL(\"No\")", shape = rectangle, color = orange]
node98 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node96 [label= "NAME(n)", shape = rectangle, color = red]
node104 [label= "atom_expr"]
node99 [label= "NAME(len)", shape = rectangle, color = red]
node103 [label= "trailer"]
node100 [label= "DELIMITER(()", shape = rectangle, color = blue]
node101 [label= "NAME(s1)", shape = rectangle, color = red]
node102 [label= "DELIMITER())", shape = rectangle, color = blue]
node107 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node106 [label= "NAME(c)", shape = rectangle, color = red]
node108 [label= "NUMBER(0)", shape = rectangle, color = pink]
node168 [label= "for_stmt"]
node109 [label= "KEYWORD(for)", shape = rectangle, color = green]
node110 [label= "NAME(i)", shape = rectangle, color = red]
node111 [label= "KEYWORD(in)", shape = rectangle, color = green]
node127 [label= "atom_expr"]
node112 [label= "NAME(range)", shape = rectangle, color = red]
node126 [label= "trailer"]
node113 [label= "DELIMITER(()", shape = rectangle, color = blue]
node125 [label= "arglist"]
node115 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node114 [label= "NAME(n)", shape = rectangle, color = red]
node116 [label= "NUMBER(1)", shape = rectangle, color = pink]
node117 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node118 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node119 [label= "NUMBER(1)", shape = rectangle, color = pink]
node120 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node122 [label= "OPERATOR(-)", shape = rectangle, color = purple]
node123 [label= "NUMBER(1)", shape = rectangle, color = pink]
node124 [label= "DELIMITER())", shape = rectangle, color = blue]
node128 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node158 [label= "stmts"]
node143 [label= "if_stmt"]
node129 [label= "KEYWORD(if)", shape = rectangle, color = green]
node136 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node135 [label= "atom_expr"]
node130 [label= "NAME(s1)", shape = rectangle, color = red]
node134 [label= "trailer"]
node131 [label= "DELIMITER([)", shape = rectangle, color = blue]
node132 [label= "NAME(i)", shape = rectangle, color = red]
node133 [label= "DELIMITER(])", shape = rectangle, color = blue]
node137 [label= "STRING_LITERAL(\'A\')", shape = rectangle, color = orange]
node138 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node140 [label= "OPERATOR(+=)", shape = rectangle, color = purple]
node139 [label= "NAME(c)", shape = rectangle, color = red]
node141 [label= "NUMBER(1)", shape = rectangle, color = pink]
node157 [label= "if_stmt"]
node142 [label= "KEYWORD(if)", shape = rectangle, color = green]
node150 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node149 [label= "atom_expr"]
node144 [label= "NAME(s2)", shape = rectangle, color = red]
node148 [label= "trailer"]
node145 [label= "DELIMITER([)", shape = rectangle, color = blue]
node146 [label= "NAME(i)", shape = rectangle, color = red]
node147 [label= "DELIMITER(])", shape = rectangle, color = blue]
node151 [label= "STRING_LITERAL(\'A\')", shape = rectangle, color = orange]
node152 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node154 [label= "OPERATOR(-=)", shape = rectangle, color = purple]
node153 [label= "NAME(c)", shape = rectangle, color = red]
node155 [label= "NUMBER(1)", shape = rectangle, color = pink]
node166 [label= "if_stmt"]
node156 [label= "KEYWORD(if)", shape = rectangle, color = green]
node160 [label= "OPERATOR(<)", shape = rectangle, color = purple]
node159 [label= "NAME(c)", shape = rectangle, color = red]
node161 [label= "NUMBER(0)", shape = rectangle, color = pink]
node162 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node165 [label= "return_stmt"]
node163 [label= "KEYWORD(return)", shape = rectangle, color = green]
node164 [label= "STRING_LITERAL(\"No\")", shape = rectangle, color = orange]
node169 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node167 [label= "NAME(c)", shape = rectangle, color = red]
node170 [label= "NUMBER(0)", shape = rectangle, color = pink]
node220 [label= "for_stmt"]
node171 [label= "KEYWORD(for)", shape = rectangle, color = green]
node172 [label= "NAME(i)", shape = rectangle, color = red]
node173 [label= "KEYWORD(in)", shape = rectangle, color = green]
node179 [label= "atom_expr"]
node174 [label= "NAME(range)", shape = rectangle, color = red]
node178 [label= "trailer"]
node175 [label= "DELIMITER(()", shape = rectangle, color = blue]
node176 [label= "NAME(n)", shape = rectangle, color = red]
node177 [label= "DELIMITER())", shape = rectangle, color = blue]
node180 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node210 [label= "stmts"]
node195 [label= "if_stmt"]
node181 [label= "KEYWORD(if)", shape = rectangle, color = green]
node188 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node187 [label= "atom_expr"]
node182 [label= "NAME(s1)", shape = rectangle, color = red]
node186 [label= "trailer"]
node183 [label= "DELIMITER([)", shape = rectangle, color = blue]
node184 [label= "NAME(i)", shape = rectangle, color = red]
node185 [label= "DELIMITER(])", shape = rectangle, color = blue]
node189 [label= "STRING_LITERAL(\'B\')", shape = rectangle, color = orange]
node190 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node192 [label= "OPERATOR(+=)", shape = rectangle, color = purple]
node191 [label= "NAME(c)", shape = rectangle, color = red]
node193 [label= "NUMBER(1)", shape = rectangle, color = pink]
node209 [label= "if_stmt"]
node194 [label= "KEYWORD(if)", shape = rectangle, color = green]
node202 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node201 [label= "atom_expr"]
node196 [label= "NAME(s2)", shape = rectangle, color = red]
node200 [label= "trailer"]
node197 [label= "DELIMITER([)", shape = rectangle, color = blue]
node198 [label= "NAME(i)", shape = rectangle, color = red]
node199 [label= "DELIMITER(])", shape = rectangle, color = blue]
node203 [label= "STRING_LITERAL(\'B\')", shape = rectangle, color = orange]
node204 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node206 [label= "OPERATOR(-=)", shape = rectangle, color = purple]
node205 [label= "NAME(c)", shape = rectangle, color = red]
node207 [label= "NUMBER(1)", shape = rectangle, color = pink]
node218 [label= "if_stmt"]
node208 [label= "KEYWORD(if)", shape = rectangle, color = green]
node212 [label= "OPERATOR(<)", shape = rectangle, color = purple]
node211 [label= "NAME(c)", shape = rectangle, color = red]
node213 [label= "NUMBER(0)", shape = rectangle, color = pink]
node214 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node217 [label= "return_stmt"]
node215 [label= "KEYWORD(return)", shape = rectangle, color = green]
node216 [label= "STRING_LITERAL(\"No\")", shape = rectangle, color = orange]
node222 [label= "return_stmt"]
node219 [label= "KEYWORD(return)", shape = rectangle, color = green]
node221 [label= "STRING_LITERAL(\"Yes\")", shape = rectangle, color = orange]
node271 [label= "funcdef"]
node226 [label= "KEYWORD(def)", shape = rectangle, color = green]
node227 [label= "NAME(main)", shape = rectangle, color = red]
node230 [label= "parameters"]
node228 [label= "DELIMITER(()", shape = rectangle, color = blue]
node229 [label= "DELIMITER())", shape = rectangle, color = blue]
node234 [label= "return_type_hint"]
node231 [label= "DELIMITER(->)", shape = rectangle, color = blue]
node232 [label= "KEYWORD(None)", shape = rectangle, color = green]
node233 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node245 [label= "stmts"]
node236 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node235 [label= "NAME(sol)", shape = rectangle, color = red]
node241 [label= "atom_expr"]
node237 [label= "NAME(Solution)", shape = rectangle, color = red]
node240 [label= "trailer"]
node238 [label= "DELIMITER(()", shape = rectangle, color = blue]
node239 [label= "DELIMITER())", shape = rectangle, color = blue]
node243 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node242 [label= "NAME(s1)", shape = rectangle, color = red]
node244 [label= "STRING_LITERAL(\"A#A\")", shape = rectangle, color = orange]
node247 [label= "OPERATOR(=)", shape = rectangle, color = purple]
node246 [label= "NAME(s2)", shape = rectangle, color = red]
node248 [label= "STRING_LITERAL(\"A#A\")", shape = rectangle, color = orange]
node270 [label= "atom_expr"]
node249 [label= "NAME(print)", shape = rectangle, color = red]
node269 [label= "trailer"]
node250 [label= "DELIMITER(()", shape = rectangle, color = blue]
node268 [label= "arglist"]
node251 [label= "STRING_LITERAL(\"Can both robots move to the same final position?\")", shape = rectangle, color = orange]
node252 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node257 [label= "atom_expr"]
node253 [label= "NAME(sol)", shape = rectangle, color = red]
node256 [label= "trailer"]
node254 [label= "OPERATOR(.)", shape = rectangle, color = purple]
node255 [label= "NAME(moveRobots)", shape = rectangle, color = red]
node265 [label= "trailer"]
node258 [label= "DELIMITER(()", shape = rectangle, color = blue]
node264 [label= "arglist"]
node259 [label= "NAME(s1)", shape = rectangle, color = red]
node260 [label= "DELIMITER(,)", shape = rectangle, color = blue]
node261 [label= "NAME(s2)", shape = rectangle, color = red]
node262 [label= "DELIMITER())", shape = rectangle, color = blue]
node266 [label= "DELIMITER())", shape = rectangle, color = blue]
node282 [label= "if_stmt"]
node272 [label= "KEYWORD(if)", shape = rectangle, color = green]
node274 [label= "OPERATOR(==)", shape = rectangle, color = purple]
node273 [label= "NAME(__name__)", shape = rectangle, color = red]
node275 [label= "STRING_LITERAL(\"__main__\")", shape = rectangle, color = orange]
node276 [label= "DELIMITER(:)", shape = rectangle, color = blue]
node281 [label= "atom_expr"]
node277 [label= "NAME(main)", shape = rectangle, color = red]
node280 [label= "trailer"]
node278 [label= "DELIMITER(()", shape = rectangle, color = blue]
node279 [label= "DELIMITER())", shape = rectangle, color = blue]
node1 -> node225;
node225 -> node2;
node225 -> node3;
node225 -> node4;
node225 -> node224;
node224 -> node46;
node46 -> node5;
node46 -> node6;
node46 -> node19;
node19 -> node7;
node19 -> node18;
node18 -> node10;
node10 -> node8;
node18 -> node9;
node18 -> node16;
node16 -> node11;
node16 -> node15;
node15 -> node12;
node15 -> node13;
node19 -> node14;
node46 -> node23;
node23 -> node20;
node23 -> node21;
node46 -> node22;
node46 -> node43;
node43 -> node25;
node25 -> node24;
node25 -> node26;
node43 -> node42;
node42 -> node27;
node42 -> node28;
node42 -> node29;
node42 -> node30;
node42 -> node31;
node42 -> node40;
node40 -> node32;
node40 -> node34;
node34 -> node33;
node34 -> node35;
node40 -> node36;
node40 -> node38;
node38 -> node37;
node38 -> node39;
node43 -> node45;
node45 -> node41;
node45 -> node44;
node224 -> node223;
node223 -> node47;
node223 -> node48;
node223 -> node67;
node67 -> node49;
node67 -> node66;
node66 -> node52;
node52 -> node50;
node66 -> node51;
node66 -> node58;
node58 -> node53;
node58 -> node57;
node57 -> node54;
node57 -> node55;
node66 -> node56;
node66 -> node65;
node65 -> node60;
node65 -> node64;
node64 -> node61;
node64 -> node62;
node67 -> node63;
node223 -> node71;
node71 -> node68;
node71 -> node69;
node223 -> node70;
node223 -> node105;
node105 -> node97;
node97 -> node72;
node97 -> node82;
node82 -> node77;
node77 -> node73;
node77 -> node76;
node76 -> node74;
node76 -> node75;
node77 -> node81;
node81 -> node78;
node81 -> node79;
node81 -> node80;
node82 -> node87;
node87 -> node83;
node87 -> node86;
node86 -> node84;
node86 -> node85;
node87 -> node91;
node91 -> node88;
node91 -> node89;
node91 -> node90;
node97 -> node92;
node97 -> node95;
node95 -> node93;
node95 -> node94;
node105 -> node98;
node98 -> node96;
node98 -> node104;
node104 -> node99;
node104 -> node103;
node103 -> node100;
node103 -> node101;
node103 -> node102;
node105 -> node107;
node107 -> node106;
node107 -> node108;
node105 -> node168;
node168 -> node109;
node168 -> node110;
node168 -> node111;
node168 -> node127;
node127 -> node112;
node127 -> node126;
node126 -> node113;
node126 -> node125;
node125 -> node115;
node115 -> node114;
node115 -> node116;
node125 -> node117;
node125 -> node118;
node118 -> node119;
node125 -> node120;
node125 -> node122;
node122 -> node123;
node126 -> node124;
node168 -> node128;
node168 -> node158;
node158 -> node143;
node143 -> node129;
node143 -> node136;
node136 -> node135;
node135 -> node130;
node135 -> node134;
node134 -> node131;
node134 -> node132;
node134 -> node133;
node136 -> node137;
node143 -> node138;
node143 -> node140;
node140 -> node139;
node140 -> node141;
node158 -> node157;
node157 -> node142;
node157 -> node150;
node150 -> node149;
node149 -> node144;
node149 -> node148;
node148 -> node145;
node148 -> node146;
node148 -> node147;
node150 -> node151;
node157 -> node152;
node157 -> node154;
node154 -> node153;
node154 -> node155;
node158 -> node166;
node166 -> node156;
node166 -> node160;
node160 -> node159;
node160 -> node161;
node166 -> node162;
node166 -> node165;
node165 -> node163;
node165 -> node164;
node105 -> node169;
node169 -> node167;
node169 -> node170;
node105 -> node220;
node220 -> node171;
node220 -> node172;
node220 -> node173;
node220 -> node179;
node179 -> node174;
node179 -> node178;
node178 -> node175;
node178 -> node176;
node178 -> node177;
node220 -> node180;
node220 -> node210;
node210 -> node195;
node195 -> node181;
node195 -> node188;
node188 -> node187;
node187 -> node182;
node187 -> node186;
node186 -> node183;
node186 -> node184;
node186 -> node185;
node188 -> node189;
node195 -> node190;
node195 -> node192;
node192 -> node191;
node192 -> node193;
node210 -> node209;
node209 -> node194;
node209 -> node202;
node202 -> node201;
node201 -> node196;
node201 -> node200;
node200 -> node197;
node200 -> node198;
node200 -> node199;
node202 -> node203;
node209 -> node204;
node209 -> node206;
node206 -> node205;
node206 -> node207;
node210 -> node218;
node218 -> node208;
node218 -> node212;
node212 -> node211;
node212 -> node213;
node218 -> node214;
node218 -> node217;
node217 -> node215;
node217 -> node216;
node105 -> node222;
node222 -> node219;
node222 -> node221;
node1 -> node271;
node271 -> node226;
node271 -> node227;
node271 -> node230;
node230 -> node228;
node230 -> node229;
node271 -> node234;
node234 -> node231;
node234 -> node232;
node271 -> node233;
node271 -> node245;
node245 -> node236;
node236 -> node235;
node236 -> node241;
node241 -> node237;
node241 -> node240;
node240 -> node238;
node240 -> node239;
node245 -> node243;
node243 -> node242;
node243 -> node244;
node245 -> node247;
node247 -> node246;
node247 -> node248;
node245 -> node270;
node270 -> node249;
node270 -> node269;
node269 -> node250;
node269 -> node268;
node268 -> node251;
node268 -> node252;
node268 -> node257;
node257 -> node253;
node257 -> node256;
node256 -> node254;
node256 -> node255;
node257 -> node265;
node265 -> node258;
node265 -> node264;
node264 -> node259;
node264 -> node260;
node264 -> node261;
node265 -> node262;
node269 -> node266;
node1 -> node282;
node282 -> node272;
node282 -> node274;
node274 -> node273;
node274 -> node275;
node282 -> node276;
node282 -> node281;
node281 -> node277;
node281 -> node280;
node280 -> node278;
node280 -> node279;
}
